name: Run Windows and Linux (x86, x64) Tests with Intel SDE Processors

env:
  SDE_WINDOWS_URL: https://downloadmirror.intel.com/831748/sde-external-9.44.0-2024-08-22-win.tar.xz
  SDE_LINUX_URL: https://downloadmirror.intel.com/831748/sde-external-9.44.0-2024-08-22-lin.tar.xz
  
on:
  workflow_dispatch:

jobs:
  build:
    uses: ./.github/workflows/windows-and-linux-build.yml

  test-sde:
    strategy:
      matrix:
        arch: [windows-x86, windows-x64, linux-x86_64]
        sde-processor: [quark, p4, p4p, mrm, pnr, nhm, wsm, slt, slm, glm, glp, tnt, snr]
    runs-on: ${{ matrix.arch == 'linux-x86_64' && 'ubuntu-latest' || 'windows-latest' }}
    needs: build
    continue-on-error: true

    name: >
      (${{ matrix.arch }}, ${{ matrix.sde-processor }})
      - ${{ fromJson('{
        "quark": {"main": "Quark"},
        "p4": {"main": "Pentium4"},
        "p4p": {"main": "Pentium4 Prescott"},
        "mrm": {"main": "Merom"},
        "pnr": {"main": "Penryn"},
        "nhm": {"main": "Nehalem"},
        "wsm": {"main": "Westmere"},
        "slt": {"main": "Saltwell"},
        "slm": {"main": "Silvermont"},
        "glm": {"main": "Goldmont"},
        "glp": {"main": "Goldmont Plus"},
        "tnt": {"main": "Tremont"},
        "snr": {"main": "Snow Ridge"}
          }')[matrix.sde-processor].main }}

    steps:

      - name: Set Build Path
        run: |
          case "${{ matrix.arch }}" in
            "linux-x86_64") BUILD_PATH="build/local" ;;
            "windows-x86") BUILD_PATH="build/windows/x86" ;;
            "windows-x64") BUILD_PATH="build/windows/x64" ;;
          esac
          echo "BUILD_PATH=$BUILD_PATH" >> $GITHUB_ENV
        shell: bash

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ matrix.arch }}
          path: ${{ env.BUILD_PATH }}

      - name: Download and Extract Intel SDE
        run: |
          if [ "${{ matrix.arch }}" == "linux-x86_64" ]; then
            echo "Downloading Linux Intel SDE"
            wget "$SDE_LINUX_URL" || { echo "Download failed"; exit 1; }
            tar -xf "$(basename "$SDE_LINUX_URL")" || { echo "Extraction failed"; exit 1; }
          elif [[ "${{ matrix.arch }}" == "windows-x86" || "${{ matrix.arch }}" == "windows-x64" ]]; then
            echo "Downloading Windows Intel SDE"
            curl -LO "$SDE_WINDOWS_URL" || { echo "Download failed"; exit 1; }
            tar -xf "$(basename "$SDE_WINDOWS_URL")" || { echo "Extraction failed"; exit 1; }
          fi
        shell: bash

      - name: Set SDE PATH
        run: |
          if [ "${{ matrix.arch }}" == "linux-x86_64" ]; then
            SDE_DIR="$(basename "$SDE_LINUX_URL" | sed 's/.tar.xz//')"
          elif [[ "${{ matrix.arch }}" == "windows-x86" || "${{ matrix.arch }}" == "windows-x64" ]]; then
            SDE_DIR="$(basename "$SDE_WINDOWS_URL" | sed 's/.tar.xz//')"
          fi
          SDE_PATH="${{ github.workspace }}/${SDE_DIR}/sde"
          echo "SDE_PATH=$SDE_PATH" >> $GITHUB_ENV
        shell: bash

      - name: Run tests using Intel SDE (Linux)
        if: matrix.arch == 'linux-x86_64'
        run: |
          chmod +x ./*
          "${{ env.SDE_PATH }}" -${{ matrix.sde-processor }} -- ctest -C Release --parallel $(nproc)
        working-directory: ${{ env.BUILD_PATH }}
        shell: bash

      - name: Run tests using Intel SDE (Windows-x86 and Windows-x64)
        if: matrix.arch == 'windows-x86' || matrix.arch == 'windows-x64'
        run: |
          & "$env:SDE_PATH" -${{ matrix.sde-processor }} -- ctest -C Release --parallel $env:NUMBER_OF_PROCESSORS
        working-directory: ${{ env.BUILD_PATH }}
        shell: pwsh